name: Docker build

on:
  workflow_dispatch:
  push:
    branches:
      - dev

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: actions-contrib/golangci-lint@v1

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run test with cover
        run: make test-cover

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/app
          tag-sha: true

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/app.Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull Docker images
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            echo ${{ steps.docker_meta.outputs.tags }}
            echo ${{ steps.docker_meta.outputs.tags[0] }}
            docker pull ${{ steps.docker_meta.outputs.tags[0] }}
      - name: Run project
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker stop -t 2 app
            docker rm -f app
            docker run --name app -v ${{ secrets.SSL_PATH }}:/etc/letsencrypt/ ${{ secrets.DOCKERHUB_USERNAME }}/app:${GITHUB_SHA::8}