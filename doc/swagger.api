swagger: '2.0'
info:
  description: |
    Hahaton API
  version: 1.0.0
  title: Swagger Hahaton
  termsOfService: http://swagger.io/terms/
  # contact:
  #   email: @ELOL99
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: event
  description: Everything about events
- name: feed
  description: Feed of users for certain event
- name: user
  description: Operations about user
- name: team
  description: Operations about team
# schemes:
# - http
paths:
  /event/{evtid}/join:
    post:
      tags:
      - event
      summary: user join event
      operationId: joinEvent
      produces:
      - application/json
      parameters:
      - in: path
        name: evtid
        required: true
        type: integer
      - in: body
        name: userID
        schema:
          $ref: '#/definitions/Add'
      responses:
        200:
          description: successful operation
        400:
          description: Invalid url
        404:
          description: user or event not found
  /user/{id}:
    get:
      tags:
      - user
      summary: Get user profile
      description: Shows user info
      operationId: getUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        type: integer
        minimum: 1
        format: int64
      responses:
        200:
          description: successful user info
        400:
          description: Invalid ID param in url
        404:
          description: User not found
  /team/{id}:
    get:
      tags:
      - team
      summary: Get team info
      description: Get team info
      operationId: getTeam
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the team
        required: true
        type: integer
        minimum: 1
        format: int64
      responses:
        200:
          description: successful team info
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid ID param in url
        404:
          description: Team not found
  /event/{evtid}/user/{id}/team:
    get:
      tags:
      - team
      summary: Get team info by user id
      description: Get team info by user id
      operationId: getTeamByUser
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        description: ID of the event
        required: true
        type: integer
        minimum: 1
        format: int64
      - name: id
        in: path
        description: ID of the user
        required: true
        type: integer
        minimum: 1
        format: int64
      responses:
        200:
          description: successful team info
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid ID param in url
        404:
          description: Team/User/Event not found
  /event/{evtid}/team:
    post:
      tags:
      - team
      summary: create Team
      operationId: createTeam
      produces:
      - application/json
      parameters:
      - in: path
        name: evtid
        required: true
        type: integer
      - in: body
        name: newTeam
        required: true
        schema:
          $ref: '#/definitions/Team'
      responses:
        200:
          description: successful team info
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid url
        404:
          description:  event not found
  /team/{id}/add:
    post:
      tags:
      - team
      summary: add user to team
      operationId: addTeam
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: TEAM ID!!
        required: true
        type: integer
      - in: body
        name: userID
        schema:
          $ref: '#/definitions/Add'
      responses:
        200:
          description: successful team info
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid url
        404:
          description: user or event not found
  /event/{evtid}/team/join:
    post:
      tags:
      - team
      summary: union 2 users in one team(autogenerated if no one has a team)
      operationId: Union
      produces:
      - application/json
      parameters:
      - in: path
        name: evtid
        required: true
        type: integer
      - in: body
        name: uid1
        schema:
           $ref: '#/definitions/Add2'
      responses:
        200:
          description: successful union team info
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid url
        404:
          description: user not found
  /event/{id}:
    get:
      tags:
      - event
      summary: Get event info
      description: Get event info(with feed)
      operationId: getEvent
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the event
        required: true
        type: integer
        minimum: 1
        format: int64
      responses:
        200:
          description: successful event info
          schema:
            $ref: '#/definitions/Event'
        400:
          description: Invalid ID param in url
        404:
          description: Event not found
  /event:
    post:
      tags:
      - event
      summary: create Event(with feed)
      operationId: createEvent
      produces:
      - application/json
      parameters:
      - in: body
        name: newEvent
        required: true
        schema:
          $ref:  '#/definitions/Event'
      responses:
        200:
          description: successful event info
          schema:
            $ref: '#/definitions/Event'
        400:
          description: Invalid url
        # 404:
        #   description:  event not found
  /feed/{id}:
    get:
      tags:
      - feed
      summary: Get feed info
      description: Get feed info
      operationId: getFeed
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the feed
        required: true
        type: integer
        minimum: 1
        format: int64
      responses:
        200:
          description: successful feed info
          schema:
            $ref: '#/definitions/Feed'
        400:
          description: Invalid ID param in url
        404:
          description: Feed not found
  /feed:
    post:
      tags:
      - feed
      summary: create Feed
      operationId: createFeed
      produces:
      - application/json
      parameters:
      - in: body
        name: newFeed
        required: true
        schema:
          $ref:  '#/definitions/Feed'
      responses:
        200:
          description: successful feed info
          schema:
            $ref: '#/definitions/Feed'
        400:
          description: Invalid url
        404:
          description:  event not found
  /event/{evtid}/user/{userid}/invite:
    post:
      tags:
      - invite
      summary: invite user from event
      operationId: inviteUser
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        required: true
        type: integer
      - name: userid
        in: path
        required: true
        type: integer
      - name: invitation
        in: body
        schema:
          type: object
          properties:
            silent:
              type: boolean
              format: boolean
      responses:
        200:
          description: successful operation
        400:
          description: Invalid url
        404:
          description: user or event not found
  /event/{evtid}/user/{userid}/uninvite:
    post:
      tags:
      - invite
      summary: delete invitation to user from event
      operationId: uninviteUser
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        required: true
        type: integer
      - name: userid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
        400:
          description: Invalid url
        404:
          description: user or event not found
  /event/{evtid}/user/{userid}/deny:
    post:
      tags:
      - invite
      summary: deny invitation to user from event
      operationId: denyInvatation
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        required: true
        type: integer
      - name: userid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
        400:
          description: Invalid url
        404:
          description: user or event not found
  /event/{evtid}/invited/user/{userid}:
    get:
      tags:
      - invite
      summary: check if user invited
      operationId: isInvited
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        required: true
        type: integer
      - name: userid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              isInvited:
                type: boolean
                format: boolean
        400:
          description: Invalid url
        404:
          description: user or event not found
  /event/{evtid}/invited/users:
    get:
      tags:
      - invite
      summary: get invited users
      operationId: getInvitedUsers
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          description: Invalid url
        404:
          description: user or event not found
  /event/{evtid}/invited/teams:
    get:
      tags:
      - invite
      summary: get invited teams
      operationId: getInvitedTeams
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
        400:
          description: Invalid url
        404:
          description: user or event not found
  /event/{evtid}/invitation/users:
    get:
      tags:
      - invite
      summary: get invitations from users
      operationId: getInvitationUsers
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          description: Invalid url
        404:
          description: user or event not found
  /event/{evtid}/invitation/teams:
    get:
      tags:
      - invite
      summary: get invitations from teams
      operationId: getInvitationTeams
      produces:
      - application/json
      parameters:
      - name: evtid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
        400:
          description: Invalid url
        404:
          description: user or event not found
  /notification/{userid}:
    get:
      tags:
      - notification
      summary: get pending notifications
      operationId: getPendingNotification
      produces:
      - application/json
      parameters:
      - name: userid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
        400:
          description: Invalid url
        404:
          description: user or event not found
  /notification/channel/{userid}:
    get:
      tags:
      - notification
      summary: connect to ws
      operationId: connectToChannel
      produces:
      - application/json
      parameters:
      - name: userid
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Notification'

        400:
          description: Invalid url
        404:
          description: user or event not found
# securityDefinitions:
#   petstore_auth:
#     type: oauth2
#     authorizationUrl: http://petstore.swagger.io/oauth/dialog
#     flow: implicit
#     scopes:
#       write:pets: modify pets in your account
#       read:pets: read your pets
#   api_key:
#     type: apiKey
#     name: api_key
#     in: header
definitions:
  Notification:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      type:
        type: integer
        format: int64
      message:
        type: string
        format: text
      status:
        type: string
        format: text
  Event:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        format: name
      description:
        type: string
        format: text
      founder:
        type: integer
        format: int64
      feed:
        $ref: '#/definitions/Feed'
  Feed:
    type: object
    properties:
      id:
        type: integer
        format: int64
      users:
        type: array
        items:
          $ref: '#/definitions/User'
      event:
        type: integer
        format: int64
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  Team:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      members:
        type: array
        items:
          $ref: '#/definitions/User'
      eventid:
        type: integer
        format: int64
  Add:
    type: object
    properties:
      uid:
        type: integer
        format: int64
  Add2:
    type: object
    properties:
      uid1:
        type: integer
        format: int64
      uid2:
        type: integer
        format: int64
  # ApiResponse:
  #   type: object
  #   properties:
  #     code:
  #       type: integer
  #       format: int32
  #     type:
  #       type: string
  #     message:
  #       type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /OlegElizarov/hahation/1.0.0
schemes:
 - https
 - http
