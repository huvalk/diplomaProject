name: Build and Deploy dev

dev_tag: ${GITHUB_SHA::8}

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: actions-contrib/golangci-lint@v1

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run test with cover
        run: make test-cover

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker images
        run: |
          docker build \
          --tag ${{ secrets.DOCKERHUB_USERNAME }}/app:dev_tag \
          --tag ${{ secrets.DOCKERHUB_USERNAME }}/app:latest \
          -f docker/app.Dockerfile . \
      - name: Push the images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app:dev_tag

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull Docker images
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:dev_tag
      - name: Run project
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker stop -t 2 app
            docker rm -f app
            docker run --name app -v ${{ secrets.SSL_PATH }}:/etc/letsencrypt/ ${{ secrets.DOCKERHUB_USERNAME }}/app:dev_tag